ngm[5:8,] <- p.c*ngm[5:8,]
ngm[seq(1,8,2),] <- (1-p.a)*ngm[seq(1,8,2),]
ngm[seq(2,8,2),] <- p.a*ngm[seq(2,8,2),]
ngm[,c(1:2, 5:6)] <- if_e*ngm[,c(1:2, 5:6)]
ngm[,c(3:4, 7:8)] <- if_l*ngm[,c(3:4, 7:8)]
ngm[1:4,5:8] <- risk.multi*ngm[1:4,5:8]
#ngm[,c(1:2,5:6)] <- days.incubation*ngm[,c(1:2,5:6)]
#ngm[,c(3:4,7:8)] <- days.symptomatic*ngm[,c(3:4,7:8)]
ngm[,"work_c2"] <- ngm[,"work_c2"]*alpha.late.w
ngm[,"community_c2"] <- ngm[,"community_c2"]*alpha.late.c
ngm[c("work_c2","work_sc2","community_c2","community_sc2"),] <- 0
ngm[c("community_c1","community_sc1","community_c2","community_sc2"),
c("community_c1","community_sc1","community_c2","community_sc2")] <- 0
cngm <- rowSums(ngm)
R0 <- sum(cngm[1:4])
print(paste0(risk.multi,":",round(R0,2)))
}
for(risk.multi in seq(.05,.75,.01)){
#R0=1.5 --> 2.75
#R0=2 --> 4.15
#R0=2.5 --> 5.5
ngm <- matrix(n.contacts*b, nrow = 8, ncol = 8)
cnames <- c("work_c1", "work_sc1","work_c2","work_sc2",
"community_c1","community_sc1","community_c2","community_sc2")
rownames(ngm) <- colnames(ngm) <- cnames
ngm[1:4,] <- (1-p.c)*ngm[1:4,]
ngm[5:8,] <- p.c*ngm[5:8,]
ngm[seq(1,8,2),] <- (1-p.a)*ngm[seq(1,8,2),]
ngm[seq(2,8,2),] <- p.a*ngm[seq(2,8,2),]
ngm[,c(1:2, 5:6)] <- if_e*ngm[,c(1:2, 5:6)]
ngm[,c(3:4, 7:8)] <- if_l*ngm[,c(3:4, 7:8)]
ngm[1:4,5:8] <- risk.multi*ngm[1:4,5:8]
#ngm[,c(1:2,5:6)] <- days.incubation*ngm[,c(1:2,5:6)]
#ngm[,c(3:4,7:8)] <- days.symptomatic*ngm[,c(3:4,7:8)]
ngm[,"work_c2"] <- ngm[,"work_c2"]*alpha.late.w
ngm[,"community_c2"] <- ngm[,"community_c2"]*alpha.late.c
ngm[c("work_c2","work_sc2","community_c2","community_sc2"),] <- 0
ngm[c("community_c1","community_sc1","community_c2","community_sc2"),
c("community_c1","community_sc1","community_c2","community_sc2")] <- 0
cngm <- rowSums(ngm)
R0 <- sum(cngm[1:4])
print(paste0(risk.multi,":",round(R0,2)))
}
b
ngm
risk.multi <- 1
ngm <- matrix(n.contacts*b, nrow = 8, ncol = 8)
cnames <- c("work_c1", "work_sc1","work_c2","work_sc2",
"community_c1","community_sc1","community_c2","community_sc2")
rownames(ngm) <- colnames(ngm) <- cnames
ngm[1:4,] <- (1-p.c)*ngm[1:4,]
ngm[5:8,] <- p.c*ngm[5:8,]
ngm[seq(1,8,2),] <- (1-p.a)*ngm[seq(1,8,2),]
ngm[seq(2,8,2),] <- p.a*ngm[seq(2,8,2),]
ngm[,c(1:2, 5:6)] <- if_e*ngm[,c(1:2, 5:6)]
ngm[,c(3:4, 7:8)] <- if_l*ngm[,c(3:4, 7:8)]
ngm[1:4,5:8] <- risk.multi*ngm[1:4,5:8]
#ngm[,c(1:2,5:6)] <- days.incubation*ngm[,c(1:2,5:6)]
#ngm[,c(3:4,7:8)] <- days.symptomatic*ngm[,c(3:4,7:8)]
ngm[,"work_c2"] <- ngm[,"work_c2"]*alpha.late.w
ngm[,"community_c2"] <- ngm[,"community_c2"]*alpha.late.c
ngm[c("work_c2","work_sc2","community_c2","community_sc2"),] <- 0
ngm[c("community_c1","community_sc1","community_c2","community_sc2"),
c("community_c1","community_sc1","community_c2","community_sc2")] <- 0
ngm
calc_R0 <- function(b){
a <- (1-p.a)*(b*n.contacts*(days.incubation+days.symptomatic)*if_e) + alpha.late.c*if_l*(days.incubation+days.symptomatic) +
0.5*p.a*(b*n.contacts*(days.incubation+days.symptomatic)*1)
return(a)
}
get_R0 <- function(r){
x <- seq(0,1,.0001)
y <- sapply(x, calc_R0)
y <- y - r
x <- x[y > 0]
return(x[1])
}
b <- get_R0(2)
b
x <- seq(0,1,.0001)
y <- sapply(x, calc_R0)
head(y)
calc_R0 <- function(b){
a <- (1-p.a)*(b*n.contacts*if_e) + alpha.late.c*if_l +
0.5*p.a*(b*n.contacts*1)
a <- (days.incubation+days.symptomatic)*a
return(a)
}
x <- seq(0,1,.0001)
y <- sapply(x, calc_R0)
head(y)
multi.e <- days.symptomatic*if_l / (days.incubation*if_e)
multi.e
days.incubation*multi.e + days.symptomatic
days.incubation + days.symptomatic
calc_R0 <- function(b){
a <- (1-p.a)*(days.incubation*multi.e) + alpha.late.c*days.symptomatic +
0.5*p.a*(days.incubation*multi.e+days.symptomatic)
a <- a*b*n.contacts
return(a)
}
get_R0 <- function(r){
x <- seq(0,1,.0001)
y <- sapply(x, calc_R0)
y <- y - r
x <- x[y > 0]
return(x[1])
}
b <- get_R0(2)
b
calc_R0 <- function(b){
a <- (1-p.a)*((days.incubation*multi.e) + alpha.late.c*days.symptomatic) +
0.5*p.a*(days.incubation*multi.e+days.symptomatic)
a <- a*b*n.contacts
return(a)
}
get_R0 <- function(r){
x <- seq(0,1,.0001)
y <- sapply(x, calc_R0)
y <- y - r
x <- x[y > 0]
return(x[1])
}
b <- get_R0(2)
b
for(risk.multi in seq(.5,2,.5)){
#R0=1.5 --> 2.75
#R0=2 --> 4.15
#R0=2.5 --> 5.5
ngm <- matrix(n.contacts*b, nrow = 8, ncol = 8)
cnames <- c("work_c1", "work_sc1","work_c2","work_sc2",
"community_c1","community_sc1","community_c2","community_sc2")
rownames(ngm) <- colnames(ngm) <- cnames
ngm[1:4,] <- (1-p.c)*ngm[1:4,]
ngm[5:8,] <- p.c*ngm[5:8,]
ngm[seq(1,8,2),] <- (1-p.a)*ngm[seq(1,8,2),]
ngm[seq(2,8,2),] <- p.a*ngm[seq(2,8,2),]
ngm[,c(1:2, 5:6)] <- if_e*ngm[,c(1:2, 5:6)]
ngm[,c(3:4, 7:8)] <- if_l*ngm[,c(3:4, 7:8)]
ngm[1:4,5:8] <- risk.multi*ngm[1:4,5:8]
#ngm[,c(1:2,5:6)] <- days.incubation*ngm[,c(1:2,5:6)]
#ngm[,c(3:4,7:8)] <- days.symptomatic*ngm[,c(3:4,7:8)]
ngm[,"work_c2"] <- ngm[,"work_c2"]*alpha.late.w
ngm[,"community_c2"] <- ngm[,"community_c2"]*alpha.late.c
ngm[c("work_c2","work_sc2","community_c2","community_sc2"),] <- 0
ngm[c("community_c1","community_sc1","community_c2","community_sc2"),
c("community_c1","community_sc1","community_c2","community_sc2")] <- 0
cngm <- rowSums(ngm)
R0 <- sum(cngm[1:4])
print(paste0(risk.multi,":",round(R0,2)))
}
infectious_fxn <- function(ni1, ni2){
d <- dgamma(seq(-(ni1-1),ni2) + 12.27248, 20.51651, 1.592124)
d <- d / sum(d)
names(d) <- c(paste0("e", 1:ni1), paste0("l", 1:ni2))
return(d)
}
y <- infectious_fxn(5,20)
y
plot(seq(1:25), y)
length(y)
plot(seq(1:25), y)
plot(seq(1:25), y, xlab="Day of infection", ylab="Density")
plot(seq(1:25), y, xlab="Day of infection", ylab="Infectiousness")
setwd("~/Google Drive/Research/COVID19/CovidTesting/covidRTPCR")
install.packages(c("here", "rstan"))
install.packages(c("here", "rstan"))
Yes
install.packages(c("here", "rstan"))
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
knitr::opts_knit$set(root.dir = here::here())
options(mc.cores=4,
scipen=999)
raw_data <- read_csv("data/antibody-test-data.csv")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
knitr::opts_knit$set(root.dir = here::here())
options(mc.cores=4,
scipen=999)
library(tidyverse)
library(rstan)
raw_data <- read_csv("data/antibody-test-data.csv")
View(raw_data)
## read in raw data
raw_data <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
!(study %in% c("Danis_no_4", "Danis")))
raw_data_Danis <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
study == "Danis")
View(raw_data_Danis)
raw_data_Danis <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
study == "Danis",
day > 4) %>%
mutate(n = ifelse(day < 7, n - 1, n),
pct_pos = test_pos/n)
dim(raw_data_Danis)
View(raw_data_Danis)
raw_data <- rbind(raw_data, raw_data_Danis)
raw_data <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
!(study %in% c("Danis_no_4", "Danis")))
raw_data_Danis <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
study == "Danis",
day > 4) %>%
mutate(n = ifelse(day < 7, n - 1, n),
nqp = ifelse(day < 7, nqp - 1, nqp),
pct_pos = test_pos/n)
raw_data <- rbind(raw_data, raw_data_Danis)
pcr_dat <- raw_data %>%
## add non-quantified positives to other positives for Danis et al.
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
## remove estimates without observations
filter(n_adj > 0,
## days needs to be above -5
day > -5,
## only use the nasal swabs from Kujawski, not throat swabs
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
View(pcr_dat)
## make the data for a 3-day incubation period
pcr_dat3 <- raw_data %>%
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
filter(n_adj > 0,
day > -3,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## make the data for a 7-day incubation period
pcr_dat7 <- raw_data %>%
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
filter(n_adj > 0,
day > -7,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## only nasal swabs
naso_dat <- pcr_dat %>%
filter(grepl("RT_PCR_naso", test)) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## only throat swabs
oro_dat <- pcr_dat %>%
filter(grepl("RT_PCR_oro", test)) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## data for sensitivity analysis, where inconclusives are classified as negative
kuj_neg_dat <- raw_data %>%
mutate(n_adj = n+inconclusive+nqp,
test_pos_adj = test_pos) %>%
filter(n_adj > 0,
day > -5,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## data for sensitivity analysis, where inconclusives are classified as positive
kuj_pos_dat <- raw_data %>%
mutate(n_adj = n+inconclusive+nqp,
test_pos_adj = test_pos+inconclusive+nqp) %>%
filter(grepl("RT_PCR", test),
n_adj > 0,
day > -5,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## create orthogonal polynomials for days since exposure
day_poly <- poly(log(pcr_dat$day+5), degree=3)
day_poly3 <- poly(log(pcr_dat3$day+3), degree=3)
day_poly7 <- poly(log(pcr_dat7$day+7), degree=3)
day_poly_guo <- poly(log(pcr_dat$day_min+5), degree=3)
day_poly_kuj <- poly(log(kuj_neg_dat$day_min+5), degree=3)
poly_predict <- predict(day_poly, log(1:T_max))
library(tidyverse)
library(rstan)
## color blind palette
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
## Stan settings
n_iter <- 1500
n_warmup <- 250
p_adapt_delta <- 0.99
n_max_treedepth <- 20
## the max number of days after exposure to estimate
T_max <- 21
exposed_n <- 686
exposed_pos <- 77
source("R/utils.R")
## read in raw data
raw_data <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
!(study %in% c("Danis_no_4", "Danis")))
raw_data_Danis <- read_csv("data/antibody-test-data.csv") %>%
filter(grepl("RT_PCR", test),
study == "Danis",
day > 4) %>%
mutate(n = ifelse(day < 7, n - 1, n),
nqp = ifelse(day < 7, nqp - 1, nqp),
pct_pos = test_pos/n)
raw_data <- rbind(raw_data, raw_data_Danis)
pcr_dat <- raw_data %>%
## add non-quantified positives to other positives for Danis et al.
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
## remove estimates without observations
filter(n_adj > 0,
## days needs to be above -5
day > -5,
## only use the nasal swabs from Kujawski, not throat swabs
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## make the data for a 3-day incubation period
pcr_dat3 <- raw_data %>%
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
filter(n_adj > 0,
day > -3,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## make the data for a 7-day incubation period
pcr_dat7 <- raw_data %>%
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
filter(n_adj > 0,
day > -7,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## only nasal swabs
naso_dat <- pcr_dat %>%
filter(grepl("RT_PCR_naso", test)) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## only throat swabs
oro_dat <- pcr_dat %>%
filter(grepl("RT_PCR_oro", test)) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## data for sensitivity analysis, where inconclusives are classified as negative
kuj_neg_dat <- raw_data %>%
mutate(n_adj = n+inconclusive+nqp,
test_pos_adj = test_pos) %>%
filter(n_adj > 0,
day > -5,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## data for sensitivity analysis, where inconclusives are classified as positive
kuj_pos_dat <- raw_data %>%
mutate(n_adj = n+inconclusive+nqp,
test_pos_adj = test_pos+inconclusive+nqp) %>%
filter(grepl("RT_PCR", test),
n_adj > 0,
day > -5,
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor()
%>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
## create orthogonal polynomials for days since exposure
day_poly <- poly(log(pcr_dat$day+5), degree=3)
day_poly3 <- poly(log(pcr_dat3$day+3), degree=3)
day_poly7 <- poly(log(pcr_dat7$day+7), degree=3)
day_poly_guo <- poly(log(pcr_dat$day_min+5), degree=3)
day_poly_kuj <- poly(log(kuj_neg_dat$day_min+5), degree=3)
poly_predict <- predict(day_poly, log(1:T_max))
poly_predict3 <- predict(day_poly3, log(1:T_max))
poly_predict7 <- predict(day_poly7, log(1:T_max))
poly_predict_guo <- predict(day_poly_guo, log(1:T_max))
poly_predict_kuj <- predict(day_poly_kuj, log(1:T_max))
rv_dat <- raw_data %>%
## add non-quantified positives to other positives for Danis et al.
mutate(n_adj=n+nqp,
test_pos_adj=test_pos+nqp) %>%
## remove estimates without observations
filter(n_adj > 0,
## days needs to be above -5
day >= 0,
## only use the nasal swabs from Kujawski, not throat swabs
!(study == "Kujawski" & test == "RT_PCR_oro")) %>%
mutate(study_idx=paste(study, test, sep="_") %>% as.factor() %>% as.numeric(),
pct_pos=test_pos_adj/n_adj)
raw_data %>%
mutate(test=ifelse(test=="RT_PCR_oro", "Oropharyngeal",
ifelse(test=="RT_PCR_naso", "Nasopharyngeal",
"Unclear"))) %>%
ggplot(aes(x=day, y=(test_pos+nqp)/(n+nqp), size=n+nqp, color=study)) +
facet_grid(.~test) +
geom_point(alpha=0.5) +
scale_x_continuous("Days since symptom onset",
breaks=seq(-7,35,7)) +
scale_y_continuous("Raw sensitivity of the RT-PCR test",
labels=scales::percent) +
scale_size_continuous("Number of\nobservations") +
scale_color_manual("Study",
values=cbbPalette) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(axis.text = element_text(color="black"),
legend.position = "bottom",
legend.title = element_text(size=10))
## fit a model to find the overall seroincidence across all observations
npv_onset_model <- stan_model("Stan/npv-fixed-onset.stan")
## check likelihood
# main_analysis$stan_ll
## false negative figure
fnr_fig <- ggplot(data=main_analysis$plot_dat, aes(x=days_since_exposure)) +
geom_vline(aes(xintercept=5), linetype="dashed") +
geom_errorbar(aes(ymin=fnr_lb, ymax=fnr_ub), color="gray30") +
geom_point(aes(y=fnr_med)) +
scale_x_continuous("",
breaks=seq(0, 21, 7),
limits=c(0,21.5)) +
scale_y_continuous("Probability RT-PCR negative,\ngiven covid-19 positive",
limits=c(0,1)) +
theme_bw() +
theme(axis.text.y=element_text(color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks=element_blank())
## run main analysis
main_analysis <- make_analysis_data(stan_model=npv_onset_model,
dat=pcr_dat,
T_max=T_max,
poly_est=as.matrix(day_poly),
poly_pred=poly_predict,
exposed_n=exposed_n,
exposed_pos=exposed_pos,
spec=1,
iter=n_iter,
warmup=n_warmup,
control=list(adapt_delta=p_adapt_delta,
max_treedepth=n_max_treedepth),
save_warmup=F,
save_stan=F)
## check likelihood
# main_analysis$stan_ll
## false negative figure
fnr_fig <- ggplot(data=main_analysis$plot_dat, aes(x=days_since_exposure)) +
geom_vline(aes(xintercept=5), linetype="dashed") +
geom_errorbar(aes(ymin=fnr_lb, ymax=fnr_ub), color="gray30") +
geom_point(aes(y=fnr_med)) +
scale_x_continuous("",
breaks=seq(0, 21, 7),
limits=c(0,21.5)) +
scale_y_continuous("Probability RT-PCR negative,\ngiven covid-19 positive",
limits=c(0,1)) +
theme_bw() +
theme(axis.text.y=element_text(color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks=element_blank())
## false omission figure
for_fig <- ggplot(data=main_analysis$plot_dat, aes(x=days_since_exposure)) +
geom_vline(aes(xintercept=5), linetype="dashed") +
geom_errorbar(aes(ymax=for_lb, ymin=for_ub), color="gray30") +
geom_point(aes(y=for_med)) +
scale_x_continuous("Days since exposure",
breaks=seq(0, 21, 7),
limits=c(0,21.5)) +
scale_y_continuous("Post-test probability,\ngiven RT-PCR negative",
limits=c(0, 0.15),
breaks=seq(0,0.15, 0.05)) +
theme_bw() +
theme(axis.text=element_text(color="black"))
gridExtra::grid.arrange(fnr_fig, for_fig, top="Fixed onset including Young et al.")
main_analysis
View(main_analysis$plot_dat)
## check likelihood
# main_analysis$stan_ll
## false negative figure
fnr_fig <- ggplot(data=main_analysis$plot_dat, aes(x=days_since_exposure)) +
geom_vline(aes(xintercept=5), linetype="dashed") +
geom_errorbar(aes(ymin=fnr_lb, ymax=fnr_ub), color="gray30") +
geom_point(aes(y=fnr_med)) +
scale_x_continuous("",
breaks=seq(0, 21, 7),
limits=c(0,21.5)) +
scale_y_continuous("Probability RT-PCR negative,\ngiven covid-19 positive",
limits=c(0,1)) +
theme_bw() +
theme(axis.text.y=element_text(color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks=element_blank())
## false omission figure
for_fig <- ggplot(data=main_analysis$plot_dat, aes(x=days_since_exposure)) +
geom_vline(aes(xintercept=5), linetype="dashed") +
geom_errorbar(aes(ymax=for_lb, ymin=for_ub), color="gray30") +
geom_point(aes(y=for_med)) +
scale_x_continuous("Days since exposure",
breaks=seq(0, 21, 7),
limits=c(0,21.5)) +
scale_y_continuous("Post-test probability,\ngiven RT-PCR negative",
limits=c(0, 0.15),
breaks=seq(0,0.15, 0.05)) +
theme_bw() +
theme(axis.text=element_text(color="black"))
gridExtra::grid.arrange(fnr_fig, for_fig, top="Fixed onset including Young et al.")
write_csv(main_analysis$plot_dat, "data/sens_by_day_ci.csv")
write_csv(main_analysis$plot_dat, "../../covid-testing/data/sens_by_day_ci.csv")
